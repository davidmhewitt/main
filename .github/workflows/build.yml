name: build
on:
  push:
    branches:
      - master
      - release
      - pre-release
  #    - monorepo-poc
  #    - monorepo-poc-affected
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node: ["12.22.1", "14.17.0", "16.1.0", "17.2.0"]
        node: ["16.1.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'release'
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract-branch
      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.15.1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Affected report preview
        run: ./scripts/commands/affected-report.sh
      - name: Affected report
        id: affected-report
        run: echo "::set-output name=report::$(./scripts/commands/affected-report.sh)"
      - name: Comment affected
        if: github.event_name == 'pull_request'
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.affected-report.outputs.report }}
          check_for_duplicate_msg: true
          duplicate_msg_pattern: ${{ steps.affected-report.outputs.report }}
      - name: Lint
        run: pnpm run lint
      - name: Test unit
        run: pnpm run test:unit:all
      - name: Test E2E
        run: pnpm run test:e2e:all
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.node }}
          path: packages/main/coverage
          retention-days: 1
#  quality:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Download test results
#        uses: actions/download-artifact@v2
#        with:
#          name: coverage-16.1.0
#          path: packages/main/coverage
#      - name: Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          base-path: packages/main/
#          path-to-lcov: ./packages/main/coverage/lcov.info
#      - name: SonarCloud Scan
#        if: env.SONAR_TOKEN != ''
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        with:
#          projectBaseDir: packages/main/
